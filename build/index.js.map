{"version":3,"sources":["../src/index.js"],"names":["dbConfig","env","process","authUrl","configApproved","hasOwnProperty","RABBITMQ_HOST","console","log","RABBITMQ_PORT","exit","rabbitmq","connect","err","conn","DEBUG","$","set","e","message"],"mappings":";;;;;;AAAA;;AACA;;;;;;kBAEe,YAAM;AACjB,QAAG;AACC,YAAIA,WAAW,EAAf;AACA,YAAIC,MAAMC,QAAQD,GAAlB;AACA,YAAIE,UAAU,IAAd;AACA,YAAIC,iBAAiB,IAArB;;AAEA,YAAGH,IAAII,cAAJ,CAAmB,eAAnB,KAAuC,CAAC,CAACJ,IAAIK,aAAhD,EACIN,SAAS,eAAT,IAA4BC,IAAIK,aAAhC,CADJ,KAEK;AACDF,6BAAiB,KAAjB;AACAG,oBAAQC,GAAR,CAAY,qEAAZ;AACH;;AAED,YAAGP,IAAII,cAAJ,CAAmB,eAAnB,KAAuC,CAAC,CAACJ,IAAIQ,aAAhD,EACIT,SAAS,eAAT,IAA4BC,IAAIQ,aAAhC,CADJ,KAEK;AACDL,6BAAiB,KAAjB;AACAG,oBAAQC,GAAR,CAAY,qEAAZ;AACH;;AAED,YAAG,CAACJ,cAAJ,EAAmB;AACfG,oBAAQC,GAAR,CAAY,mFAAZ;AACAN,oBAAQQ,IAAR,CAAa,CAAC,CAAd;AACH,SAHD,MAIK;AACD,gBAAI;AACAC,uCAASC,OAAT,aAA2BZ,SAAS,eAAT,CAA3B,SAAwDA,SAAS,eAAT,CAAxD,EAAqF,UAACa,GAAD,EAAMC,IAAN,EAAe;AAChG,wBAAGD,GAAH,EAAQN,QAAQC,GAAR,qBAA8BK,GAA9B,EAAR,KACI;AACA,4BAAGX,QAAQD,GAAR,CAAYc,KAAZ,IAAqB,MAAxB,EACIR,QAAQC,GAAR;;AAEJQ,iCAAEC,GAAF,CAAM,UAAN,EAAkBH,IAAlB;AACH;AACJ,iBARD;AASH,aAVD,CAWA,OAAOI,CAAP,EAAU;AACNX,wBAAQC,GAAR,qBAA8BU,EAAEC,OAAhC;AACH;AACJ;AACJ,KAxCD,CAyCA,OAAOD,CAAP,EAAU;AACNX,gBAAQC,GAAR,qBAA8BU,EAAEC,OAAhC;AACH;AACJ,C","file":"index.js","sourcesContent":["import { $ } from \"@dekproject/scope\";\nimport rabbitmq from 'amqplib/callback_api';\n\nexport default () => {\n    try{\n        let dbConfig = {};\n        let env = process.env;\n        let authUrl = null;\n        let configApproved = true;\n\n        if(env.hasOwnProperty('RABBITMQ_HOST') && !!env.RABBITMQ_HOST)\n            dbConfig['RABBITMQ_HOST'] = env.RABBITMQ_HOST\n        else {\n            configApproved = false\n            console.log('[ RabbitMQ ] - There is no RABBITMQ_HOST variable in the .env file.')\n        }\n\n        if(env.hasOwnProperty('RABBITMQ_PORT') && !!env.RABBITMQ_PORT)\n            dbConfig['RABBITMQ_PORT'] = env.RABBITMQ_PORT\n        else {\n            configApproved = false\n            console.log('[ RabbitMQ ] - There is no RABBITMQ_PORT variable in the .env file.')\n        }\n\n        if(!configApproved){\n            console.log('[ RabbitMQ ] - Please correct the above errors before restarting the application.')\n            process.exit(-1);\n        }\n        else {\n            try {\n                rabbitmq.connect(`amqp://${dbConfig['RABBITMQ_HOST']}:${dbConfig['RABBITMQ_PORT']}`, (err, conn) => {\n                    if(err) console.log(`[ RabbitMQ ] - ${err}`);\n                    else{\n                        if(process.env.DEBUG == 'true')\n                            console.log(`[ RabbitMQ ] - RabbitMQ successfully signed`);\n\n                        $.set(\"rabbitmq\", conn);\n                    }\n                });\n            }\n            catch (e) {\n                console.log(`[ RabbitMQ ] - ${e.message}`);\n            }\n        }\n    }\n    catch (e) {\n        console.log(`[ RabbitMQ ] - ${e.message}`);\n    }\n}\n"]}